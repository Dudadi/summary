	https://www.youtube.com/watch?v=p-iiEDtpy6I
	javascript是通过javascript引擎运行的，运行流程：
	首先javascript在碰到函数时，会读取函数内的javascript源码，然后通过Parser模块词法分析、语法分析最终提取出抽象语法树AST。然后Ignition Interpreter将AST变成Byte Code字节码，最终编译器会将Optimizer优化的字节码通过编译器运行成如下：
	// example.js
	function return5 (i) {
	  return (i+5)*12;
	}
	console.log(return5(0));
	
	C:\Users\l00495332\Desktop>node --print-bytecode --print-bytecode-filter=return5 example.js
	[generated bytecode for function: return5 (0x023da0291741 <SharedFunctionInfo return5>)]
	Parameter count 2
	Register count 0
	Frame size 0
	   25 S> 0000023DA029200E @    0 : 25 02             Ldar a0
	   34 E> 0000023DA0292010 @    2 : 40 05 01          AddSmi [5], [1]
	   37 E> 0000023DA0292013 @    5 : 42 0c 00          MulSmi [12], [0]
	   41 S> 0000023DA0292016 @    8 : aa                Return
	Constant pool (size = 0)
	Handler Table (size = 0)
	Source Position Table (size = 10)
	0x023da0292019 <ByteArray[10]>
	60
	
	后续TurboFan Optimizer会根据字节码来做优化，比如将多次运行的字节码（标记为hot）缓存为机器吗merchine code
  
